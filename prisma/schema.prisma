// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  username String
  password String
  role     Role    @default(USER)
  Order    Order[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  subtitle    String
  description String   @db.Text
  price       Decimal  @db.Money
  discount    Int?
  new         Boolean? @default(false)
  category    String

  images         ProductImages[]
  ProductDetails ProductDetails[]
  ProductTags ProductTags[]
}

model ProductImages {
  id        Int    @id @default(autoincrement())
  url       String
  productId Int

  product Product @relation(fields: [productId], references: [id])
}

model ProductDetails {
  color        String?
  size         String?
  stock        Int            @default(0)
  detailId     Int            @default(autoincrement())
  productId    Int
  product      Product        @relation(fields: [productId], references: [id])
  OrderProduct OrderProduct[]

  @@id(name: "sku", [productId, detailId])
}

model Tags {
  id   Int    @id @default(autoincrement())
  name String @unique

  ProductTags ProductTags[]
}

model ProductTags {
  id        String @id @default(uuid())
  productId Int
  tagId     Int

  tags    Tags    @relation(fields: [tagId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Order {
  id         String   @id @default(uuid())
  userId     String
  createdAt  DateTime @default(now())
  total      Decimal  @db.Money
  shippingId String

  user     User           @relation(fields: [userId], references: [id])
  shipping Shipping       @relation(fields: [shippingId], references: [id])
  products OrderProduct[]
}

model OrderProduct {
  id             String @id @default(uuid())
  productId      Int
  productDetails Int
  amount         Int
  orderId        String

  order   Order          @relation(fields: [orderId], references: [id])
  product ProductDetails @relation(fields: [productId, productDetails], references: [productId, detailId])
}

model Shipping {
  id            String  @id @default(uuid())
  userFirstName String
  userLastName  String
  companyName   String?
  zipCode       String  @db.Char(5)
  region        String
  address       String
  city          String
  province      String
  addOnAddress  String?
  email         String
  Information   String? @db.Text
  order         Order[]
}

enum Role {
  USER
  ADMIN
}
